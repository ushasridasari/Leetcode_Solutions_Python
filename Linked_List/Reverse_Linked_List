# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        prev, curr = None, head              # prev starts as None, curr starts at the head of the list
        while curr:                          # loop until curr becomes None
            nxt = curr.next                  # save the next node 
            curr.next = prev                 # reverse the link
            prev = curr                      # move prev forward
            curr = nxt                       # move curr forward
        return prev 
        