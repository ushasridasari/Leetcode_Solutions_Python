# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        #if p and q are empty trees then they are identical and returns true 
        if not p and not q:
            return True
        #if p and q exists and both the values are equal
        if p and q and p.val == q.val:
            #recursively check left and right subtrees are same and returns true
            return self.isSameTree(p.left, q.left) and self.isSameTree(p.right, q.right)
        else:
            return False